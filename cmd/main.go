package main

import (
	"fmt"
	"log"
	"os"
	"time"

	"github.com/Huong3203/APIPodcast/config"
	"github.com/Huong3203/APIPodcast/routes"
	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv" // âœ… ThÃªm dÃ²ng nÃ y Ä‘á»ƒ dÃ¹ng godotenv
)

func main() {
	if os.Getenv("DOCKER_ENV") != "true" {
		_ = godotenv.Load() // chá»‰ dÃ¹ng khi cháº¡y local, khÃ´ng lá»—i khi thiáº¿u
	}

	// Connect DB
	config.ConnectDB()

	// Setup Gin
	r := gin.Default()

	// âœ… Bá»• sung cáº¥u hÃ¬nh CORS
	r.Use(cors.New(cors.Config{
		AllowOrigins: []string{
			"http://localhost:5173",            // âœ… React local
			"https://your-frontend-domain.com", // âœ… náº¿u báº¡n cÃ³ deploy
		},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Authorization"},
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	// Setup routes
	routes.SetupRoutes(r, config.DB)

	// Get port from environment (Railway sets PORT automatically)
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080" // Default local
	}

	fmt.Printf("ðŸš€ Server starting on port %s\n", port)

	// Start server
	log.Fatal(r.Run(":" + port))
}
